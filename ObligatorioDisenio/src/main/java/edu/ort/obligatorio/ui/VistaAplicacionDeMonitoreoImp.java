/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.ort.obligatorio.ui;

import edu.ort.obligatorio.controladores.ControladorVistaAplicacionDeMonitoreo;
import edu.ort.obligatorio.controladores.ControladorVistaAtenderLlamada;
import edu.ort.obligatorio.dominio.Llamada;
import edu.ort.obligatorio.dominio.Sector;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.HashMap;
import static java.util.stream.Collectors.joining;

/**
 *
 * @author Nadia
 */
public class VistaAplicacionDeMonitoreoImp extends javax.swing.JDialog implements VistaAplicacionDeMonitoreo{
    ControladorVistaAplicacionDeMonitoreo controlador;

    /**
     * Creates new form DialogoAplicacionDeMonitoreo
     */
    public VistaAplicacionDeMonitoreoImp() {
        initComponents();
        this.controlador = new ControladorVistaAplicacionDeMonitoreo(this);
        setTitle("Aplicacion de monitoreo");
        inicializar();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstSectores = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        checkVerTodos = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstLlamadas = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstSectores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstSectores.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstSectoresValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstSectores);

        jLabel1.setText("Sectores");

        checkVerTodos.setText("Todos los Sectores");
        checkVerTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkVerTodosActionPerformed(evt);
            }
        });

        lstLlamadas.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstLlamadasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstLlamadas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkVerTodos)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkVerTodos)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(113, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void checkVerTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkVerTodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkVerTodosActionPerformed

    private void lstLlamadasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstLlamadasValueChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_lstLlamadasValueChanged

    private void lstSectoresValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstSectoresValueChanged
        // TODO add your handling code here:
        sectorSeleccionado();
    }//GEN-LAST:event_lstSectoresValueChanged

    @Override
    public void mostrarSectores(HashMap<Integer, Sector> sectores) {
//        ArrayList<String> sectoresFormat = new ArrayList();
//        for(Sector s: sectores.values()) {
//            sectoresFormat.add(s.getNombre());
//        }
        lstSectores.setListData(sectores.values().toArray());

    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkVerTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList lstLlamadas;
    private javax.swing.JList lstSectores;
    // End of variables declaration//GEN-END:variables

    private void inicializar() {
        controlador.inicializar();
    }

    @Override
    public void mostrarLlamadas(ArrayList<Llamada> llamadas) {
        ArrayList<String> llamadasFormat = new ArrayList();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("MM/dd/yyyy - HH:mm:ss");
        llamadasFormat.add("# llamada | Estado | Inicio | Fin | # Puesto | Trabajador | Duracion | Costo | Cliente | Saldo");
        for(Llamada l: llamadas) {
            String test = l.getFechaHoraFin() != null ? l.getFechaHoraFin().format(formatter): "-";
            String test2 = l.duracionLlamada() != -1 ? l.duracionLlamada()+"" : "-";
            String stringLlamada = l.getNumeroLlamada() + " | " + l.getEstado() + " | " +
            l.getFechaHoraInicio().format(formatter) + " | " + test + " | " + l.getNumeroPuesto() + " | " +
            l.getNombreDelTrabajador() + " | " + test2 + " | " + l.getCostoLlamada() + " | " +
            l.getNombreDelCliente() + " | " + l.getSaldoDelCliente();
            llamadasFormat.add(stringLlamada);
        }
        lstLlamadas.setListData(llamadasFormat.toArray());
    }

    @Override
    public void reset() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    private void sectorSeleccionado() {
        Sector sector = (Sector) lstSectores.getSelectedValue();
        controlador.sectorSeleccionado(sector);
    }
    
    public void recargarListaLlamadas() {
        sectorSeleccionado();
    }
}
